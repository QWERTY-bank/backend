// <auto-generated />
using System;
using Bank.Credits.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bank.Credits.Persistence.Migrations
{
    [DbContext(typeof(CreditsDbContext))]
    [Migration("20250309081904_AddPaymentPlanId")]
    partial class AddPaymentPlanId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bank_credits")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bank.Credits.Domain.Credits.Credit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("DebtAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("Key")
                        .HasColumnType("uuid");

                    b.Property<int>("PeriodDays")
                        .HasColumnType("integer");

                    b.Property<long>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlanId"));

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("TakingDate")
                        .HasColumnType("date");

                    b.Property<Guid>("TariffId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.HasIndex("TariffId");

                    b.ToTable("Credits", "bank_credits");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Credits.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreditId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Key")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PaymentDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<long>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlanId"));

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreditId");

                    b.HasIndex("PlanId");

                    b.ToTable("Payments", "bank_credits");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Jobs.IssuingCreditsPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("FromPlanId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ToPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("IssuingCreditsPlans", "bank_plans");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Jobs.PaymentsPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("FromPlanId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ToPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("PaymentsPlans", "bank_plans");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Jobs.RepaymentPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("FromPlanId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("StatusUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ToPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("RepaymentPlans", "bank_plans");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Tariffs.Tariff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("numeric");

                    b.Property<int>("InterestRateType")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPeriodDays")
                        .HasColumnType("integer");

                    b.Property<int>("MinPeriodDays")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tariffs", "bank_credits");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Credits.Credit", b =>
                {
                    b.HasOne("Bank.Credits.Domain.Tariffs.Tariff", "Tariff")
                        .WithMany()
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Bank.Credits.Domain.Credits.CreditPaymentsInfo", "PaymentsInfo", b1 =>
                        {
                            b1.Property<Guid>("CreditId")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("LastPayment")
                                .HasColumnType("numeric");

                            b1.Property<int>("Payment")
                                .HasColumnType("integer");

                            b1.HasKey("CreditId");

                            b1.ToTable("Credits", "bank_credits");

                            b1.WithOwner()
                                .HasForeignKey("CreditId");
                        });

                    b.Navigation("PaymentsInfo")
                        .IsRequired();

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Credits.Payment", b =>
                {
                    b.HasOne("Bank.Credits.Domain.Credits.Credit", "Credit")
                        .WithMany("PaymentHistory")
                        .HasForeignKey("CreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credit");
                });

            modelBuilder.Entity("Bank.Credits.Domain.Credits.Credit", b =>
                {
                    b.Navigation("PaymentHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
